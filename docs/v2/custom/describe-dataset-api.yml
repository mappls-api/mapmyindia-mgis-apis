openapi: 3.0.1
info:
  title: Describe Dataset API
  description: |-
    *Describe Dataset API provides all attribute names except geometry against a dataset. <hr><br>![MapmyIndia logo](https://www.mapmyindia.com/api/img/mapmyindia-api.png)

    On a Mission to <b>"Make our world better through maps, location technologies & IoT"</b>, MapmyIndia is continuously enabling real time hyper-local information access through its map & location services. mGIS APIs are a part of mGIS platform and the document describes APIs usage and specifications for their integration into an application. The document covers :
    <ul><li>List of APIs along with use cases</ul></li> 
    <ul><li>Explanation of resources and query parameters</ul></li>
    <ul><li>Listing of response structure and data type</ul></li>

    ## Important notes
     <ul><li><b>URLs</b>: the urls to use for UAT and Production are:  <ul><li>
     <b>Production</b>:
    <code>https://mgis-apiv2.mappls.com/</code></li><li>
     <b>UAT</b>:<code>https://mgis-preprod.mapmyindia.in/</code><li> To call our API, the
    endpoint requires access-token authorization and the <code>access-token</code> needs to be . For example <code>https://mgis.mapmyindia.in/describeDataset </code> <br> Pass header as <code>Authorization:Bearer access_token</code>   </li> </ul> <li>For any issues or questions please submit it to our support : <a href="mailto:apisupport@mapmyindia.com" target="_blank">API Support</a>.  If you have some non-technical or commercial queries, contact your service account manager</li></ul>
  contact:
    name: MapmyIndia API Support
    url: https://www.mapmyindia.com/api/#f_cont
    email: apisupport@mapmyindia.com
  termsOfService: https://www.mapmyindia.com/api/terms-&-conditions
  version: V2.0.0
  license:
    name: Revised BSD-3 Clause
    url: https://github.com/MapmyIndia/
tags:
  - name: Describe Dataset API
    description: Describe Dataset API is used to provide all attribute names except geometry against a dataset.
servers:
  - url: https://mgis-apiv2.mappls.com/
    description: Production server for mGIS APIs
  - url: https://mgis-preprod.mapmyindia.in/
    description: UAT server for mGIS APIs testing
paths:
  /describeDataset:
    get:
      tags:
        - Describe Dataset API
      summary: fetches the attribute names.
      description: Fetches the attribute names of the dataset except geometry in response.
      operationId: describeDatasetGet
      parameters:
        - $ref: '#/components/parameters/datasetNmeParam'
        - $ref: '#/components/parameters/datastore'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/describeDatasetRes'
        '400':
          description: Bad Request, User made an error while creating a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject400'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject401'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject500'
      deprecated: false
components:
  parameters:
    datasetNmeParam:
      name: datasetNme
      in: query
      description: Returns all attribute names except geometry against a dataset.
      required: true
      allowEmptyValue: false
      schema:
        type: string
      example: india
    datastore:
      name: dataStoreName
      in: query
      description: Name of the dataStoreName in case of data adaptor.
      required: false
      allowEmptyValue: false
      schema:
        type: string
      example: india
  schemas:
    describeDatasetRes:
      title: datasetNme
      type: object
      properties:
        code:
          type: string
          description: Response code.
          example: '200'
        success:
          type: string
          example: true
        message:
          type: string
          example: ''
        data:
          type: object
          properties:
            propertyList:
              type: array
              items:
                type: object
                properties:
                  ColumnName:
                    type: string
                    description: Name of Column
                    example: st_name
                  ColumnType:
                    type: string
                    description: Data Type of ColumnName
                    example: string
    ErrorObjectCommon:
      title: ErrorObject
      type: object
      properties:
        code:
          type: string
          description: Error code.
          example: '422'
        message:
          type: string
          description: Different error messages that might have occured while making a particular request to the server
          example: Bad request. Username not found.
    ErrorObject400:
      title: Geoserver ErrorObject
      type: object
      properties:
        message:
          type: string
          description: Different error messages that might have occured while making a particular request to the server
          example: Layer not found.
        code:
          type: number
          description: Error code.
          example: 400
    ErrorObject401:
      title: Geoserver ErrorObject
      type: object
      properties:
        message:
          type: string
          description: Different error messages that might have occured while making a particular request to the server
          example: Access defined.
        code:
          type: number
          description: Error code.
          example: 401
    ErrorObject500:
      title: Internal Server ErrorObject
      type: object
      properties:
        code:
          type: string
          description: Error code.
          example: '500'
        message:
          type: string
          description: Different error messages that might have occured while making a particular request to the server
          example: Something went wrong.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
